name: Test and Deploy Allure to Pages

on:
  push:
    branches:
      - main
      - tests/dev
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: "Update visual snapshots (toHaveScreenshot baselines)"
        type: boolean
        default: false
        required: false
      run_visual:
        description: "Include visual tests (@visual) without updating snapshots"
        type: boolean
        default: false
        required: false

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    env:
      UPDATE_SNAPSHOTS: ${{ inputs.update_snapshots || 'false' }}
      RUN_VISUAL: ${{ inputs.run_visual || 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests (${{ matrix.browser }})
        continue-on-error: true
        run: |
          if [ "${UPDATE_SNAPSHOTS}" = "true" ]; then
            echo "Clean old visual baselines and regenerate for ${{ matrix.browser }}...";
            rm -rf tests/*-snapshots || true
            npx playwright test --project=${{ matrix.browser }} --grep @visual --update-snapshots --reporter=line;
          else
            if [ "${RUN_VISUAL}" = "true" ]; then
              echo "Running visual tests for ${{ matrix.browser }}...";
              npx playwright test --project=${{ matrix.browser }} --grep @visual;
            else
              echo "Running non-visual tests for ${{ matrix.browser }}...";
              npx playwright test --project=${{ matrix.browser }} --grep-invert @visual;
            fi
          fi

      - name: Upload allure-results (${{ matrix.browser }})
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results
          if-no-files-found: ignore

  merge-and-deploy:
    name: Merge Allure results and deploy Pages
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/tests/dev') }}
    steps:
      - name: Download allure results (chromium)
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: allure-results-chromium
          path: ./allure-merged/chromium

      - name: Download allure results (firefox)
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: allure-results-firefox
          path: ./allure-merged/firefox

      - name: Download allure results (webkit)
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          name: allure-results-webkit
          path: ./allure-merged/webkit

      - name: Merge allure result folders
        if: ${{ always() }}
        run: |
          mkdir -p ./allure-results
          for d in ./allure-merged/*; do
            if [ -d "$d" ]; then
              echo "Merging $d";
              cp -r "$d"/* ./allure-results/ 2>/dev/null || true
            fi
          done
          echo "Merged allure-results contents:";
          ls -la ./allure-results || true

      - name: Generate Allure static site
        if: ${{ always() }}
        run: |
          mkdir -p ./docs
          if [ -d ./allure-results ] && [ "$(ls -A ./allure-results 2>/dev/null)" ]; then
            echo "Generating Allure static site into ./docs";
            npx allure-commandline generate ./allure-results --clean -o ./docs || true
          else
            echo "No allure-results found; creating empty docs with placeholder index";
            echo "<html><body><h1>No Allure results available</h1></body></html>" > ./docs/index.html
          fi
          touch ./docs/.nojekyll

      - name: Upload Pages artifact
        if: ${{ always() }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to GitHub Pages
        id: deployment
        if: ${{ always() }}
        uses: actions/deploy-pages@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


